/*
 * Azure Functions OpenAPI Extension
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.HttpErrorResponse;
import io.swagger.client.model.HttpGenericListObjectResponseIdentity;
import io.swagger.client.model.HttpGenericObjectResponseIdentityById;
import io.swagger.client.model.HttpSimpleMessageObjectResponse;
import io.swagger.client.model.IdentityAliasesRequestBody;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for JourneyApi
 */
@Ignore
public class JourneyApiTest {

    private final JourneyApi api = new JourneyApi();

    /**
     * Create or Update an Alias
     *
     * Every event in the Journey has an Identity of the originating individual, different channels can have their own unique Identities, API consumers can tie multiple duplicate Identities together to a unique single individual nondestructively (i.e soft merge) without modifying the Tape. Once aliased, all duplicates are treated as a single Identity for any purpose (Query or View).  SAS Token Requirements:  - ss&#x3D;idmt  - sp&#x3D;w
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createOrUpdateAnAliasTest() throws ApiException {
        IdentityAliasesRequestBody body = null;
        String authorization = null;
        String id = null;
        HttpSimpleMessageObjectResponse response = api.createOrUpdateAnAlias(body, authorization, id);

        // TODO: test validations
    }
    /**
     * Delete Identity
     *
     * Deletes a specific Identity using provided ID.  SAS Token Requirements:  - ss&#x3D;idmt  - sp&#x3D;w
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteIdentityTest() throws ApiException {
        String authorization = null;
        String id = null;
        HttpSimpleMessageObjectResponse response = api.deleteIdentity(authorization, id);

        // TODO: test validations
    }
    /**
     * Delete Identity Aliases
     *
     * Delete an Identity&#x27;s Aliases.  SAS Token Requirements:  - ss&#x3D;idmt  - sp&#x3D;w
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteIdentityAliasesTest() throws ApiException {
        String authorization = null;
        String id = null;
        String response = api.deleteIdentityAliases(authorization, id);

        // TODO: test validations
    }
    /**
     * Get Identity By Id
     *
     * Journeys are built around a concept of Identity. An Identity shapes how a Journey is connected together. Retrieve an Identity of an individual by providing their ID.  SAS Token Requirements:  - ss&#x3D;idmt  - sp&#x3D;r
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIdentityByIdTest() throws ApiException {
        String authorization = null;
        String id = null;
        HttpGenericObjectResponseIdentityById response = api.getIdentityById(authorization, id);

        // TODO: test validations
    }
    /**
     * List Identities
     *
     * Journeys are built around a concept of Identity. An Identity shapes how a Journey is connected together. Get all identities.  SAS Token Requirements:  - ss&#x3D;idmt  - sp&#x3D;r
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listIdentitiesTest() throws ApiException {
        String authorization = null;
        HttpGenericListObjectResponseIdentity response = api.listIdentities(authorization);

        // TODO: test validations
    }
}
