/*
 * Azure Functions OpenAPI Extension
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Action;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * JourneyAction
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-06T08:57:46.449-05:00[America/Chicago]")
public class JourneyAction {
  @SerializedName("name")
  private String name = null;

  @SerializedName("organization")
  private String organization = null;

  @SerializedName("namespace")
  private String namespace = null;

  @SerializedName("version")
  private String version = null;

  @SerializedName("active")
  private Boolean active = null;

  @SerializedName("templateId")
  private String templateId = null;

  @SerializedName("rules")
  private Object rules = null;

  @SerializedName("actions")
  private List<Action> actions = null;

  public JourneyAction name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name
   * @return name
  **/
  @Schema(description = "Name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public JourneyAction organization(String organization) {
    this.organization = organization;
    return this;
  }

   /**
   * Organization
   * @return organization
  **/
  @Schema(description = "Organization")
  public String getOrganization() {
    return organization;
  }

  public void setOrganization(String organization) {
    this.organization = organization;
  }

  public JourneyAction namespace(String namespace) {
    this.namespace = namespace;
    return this;
  }

   /**
   * Namespace
   * @return namespace
  **/
  @Schema(description = "Namespace")
  public String getNamespace() {
    return namespace;
  }

  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }

  public JourneyAction version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Version
   * @return version
  **/
  @Schema(description = "Version")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public JourneyAction active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Active
   * @return active
  **/
  @Schema(description = "Active")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public JourneyAction templateId(String templateId) {
    this.templateId = templateId;
    return this;
  }

   /**
   * Template Id
   * @return templateId
  **/
  @Schema(description = "Template Id")
  public String getTemplateId() {
    return templateId;
  }

  public void setTemplateId(String templateId) {
    this.templateId = templateId;
  }

  public JourneyAction rules(Object rules) {
    this.rules = rules;
    return this;
  }

   /**
   * Rules
   * @return rules
  **/
  @Schema(description = "Rules")
  public Object getRules() {
    return rules;
  }

  public void setRules(Object rules) {
    this.rules = rules;
  }

  public JourneyAction actions(List<Action> actions) {
    this.actions = actions;
    return this;
  }

  public JourneyAction addActionsItem(Action actionsItem) {
    if (this.actions == null) {
      this.actions = new ArrayList<Action>();
    }
    this.actions.add(actionsItem);
    return this;
  }

   /**
   * List of actions
   * @return actions
  **/
  @Schema(description = "List of actions")
  public List<Action> getActions() {
    return actions;
  }

  public void setActions(List<Action> actions) {
    this.actions = actions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JourneyAction journeyAction = (JourneyAction) o;
    return Objects.equals(this.name, journeyAction.name) &&
        Objects.equals(this.organization, journeyAction.organization) &&
        Objects.equals(this.namespace, journeyAction.namespace) &&
        Objects.equals(this.version, journeyAction.version) &&
        Objects.equals(this.active, journeyAction.active) &&
        Objects.equals(this.templateId, journeyAction.templateId) &&
        Objects.equals(this.rules, journeyAction.rules) &&
        Objects.equals(this.actions, journeyAction.actions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, organization, namespace, version, active, templateId, rules, actions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JourneyAction {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    rules: ").append(toIndentedString(rules)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
