/*
 * Customer Journey as a Service (CJaaS)
 * Something amazing, something special - the Customer Journey as a Service (CJaaS) is a core data layer to enable Journeys across products built upon serverless multi-cloud architecture, to be available as a SaaS service for applications inside and outside of Cisco. [**Cisco Experimental - Not For Production Use**]
 *
 * OpenAPI spec version: 0.5.0
 * Contact: cjaas-earlyaccess@cisco.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * OnlineOrchestration
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-02-10T15:46:40.647328-07:00[America/Denver]")
public class OnlineOrchestration {
  @SerializedName("typeOfOffer")
  private String typeOfOffer = null;

  @SerializedName("displayTitle")
  private String displayTitle = null;

  @SerializedName("displayMessage")
  private String displayMessage = null;

  @SerializedName("offerImage")
  private String offerImage = null;

  @SerializedName("maxWidth")
  private Integer maxWidth = null;

  @SerializedName("link")
  private String link = null;

  @SerializedName("oneTimeJWT")
  private String oneTimeJWT = null;

  @SerializedName("connectID")
  private String connectID = null;

  @SerializedName("validTill")
  private OffsetDateTime validTill = null;

  public OnlineOrchestration typeOfOffer(String typeOfOffer) {
    this.typeOfOffer = typeOfOffer;
    return this;
  }

   /**
   * Get typeOfOffer
   * @return typeOfOffer
  **/
  @Schema(description = "")
  public String getTypeOfOffer() {
    return typeOfOffer;
  }

  public void setTypeOfOffer(String typeOfOffer) {
    this.typeOfOffer = typeOfOffer;
  }

  public OnlineOrchestration displayTitle(String displayTitle) {
    this.displayTitle = displayTitle;
    return this;
  }

   /**
   * Get displayTitle
   * @return displayTitle
  **/
  @Schema(description = "")
  public String getDisplayTitle() {
    return displayTitle;
  }

  public void setDisplayTitle(String displayTitle) {
    this.displayTitle = displayTitle;
  }

  public OnlineOrchestration displayMessage(String displayMessage) {
    this.displayMessage = displayMessage;
    return this;
  }

   /**
   * Get displayMessage
   * @return displayMessage
  **/
  @Schema(description = "")
  public String getDisplayMessage() {
    return displayMessage;
  }

  public void setDisplayMessage(String displayMessage) {
    this.displayMessage = displayMessage;
  }

  public OnlineOrchestration offerImage(String offerImage) {
    this.offerImage = offerImage;
    return this;
  }

   /**
   * Get offerImage
   * @return offerImage
  **/
  @Schema(description = "")
  public String getOfferImage() {
    return offerImage;
  }

  public void setOfferImage(String offerImage) {
    this.offerImage = offerImage;
  }

  public OnlineOrchestration maxWidth(Integer maxWidth) {
    this.maxWidth = maxWidth;
    return this;
  }

   /**
   * Get maxWidth
   * @return maxWidth
  **/
  @Schema(description = "")
  public Integer getMaxWidth() {
    return maxWidth;
  }

  public void setMaxWidth(Integer maxWidth) {
    this.maxWidth = maxWidth;
  }

  public OnlineOrchestration link(String link) {
    this.link = link;
    return this;
  }

   /**
   * Get link
   * @return link
  **/
  @Schema(description = "")
  public String getLink() {
    return link;
  }

  public void setLink(String link) {
    this.link = link;
  }

  public OnlineOrchestration oneTimeJWT(String oneTimeJWT) {
    this.oneTimeJWT = oneTimeJWT;
    return this;
  }

   /**
   * Get oneTimeJWT
   * @return oneTimeJWT
  **/
  @Schema(description = "")
  public String getOneTimeJWT() {
    return oneTimeJWT;
  }

  public void setOneTimeJWT(String oneTimeJWT) {
    this.oneTimeJWT = oneTimeJWT;
  }

  public OnlineOrchestration connectID(String connectID) {
    this.connectID = connectID;
    return this;
  }

   /**
   * Get connectID
   * @return connectID
  **/
  @Schema(description = "")
  public String getConnectID() {
    return connectID;
  }

  public void setConnectID(String connectID) {
    this.connectID = connectID;
  }

  public OnlineOrchestration validTill(OffsetDateTime validTill) {
    this.validTill = validTill;
    return this;
  }

   /**
   * Get validTill
   * @return validTill
  **/
  @Schema(description = "")
  public OffsetDateTime getValidTill() {
    return validTill;
  }

  public void setValidTill(OffsetDateTime validTill) {
    this.validTill = validTill;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OnlineOrchestration onlineOrchestration = (OnlineOrchestration) o;
    return Objects.equals(this.typeOfOffer, onlineOrchestration.typeOfOffer) &&
        Objects.equals(this.displayTitle, onlineOrchestration.displayTitle) &&
        Objects.equals(this.displayMessage, onlineOrchestration.displayMessage) &&
        Objects.equals(this.offerImage, onlineOrchestration.offerImage) &&
        Objects.equals(this.maxWidth, onlineOrchestration.maxWidth) &&
        Objects.equals(this.link, onlineOrchestration.link) &&
        Objects.equals(this.oneTimeJWT, onlineOrchestration.oneTimeJWT) &&
        Objects.equals(this.connectID, onlineOrchestration.connectID) &&
        Objects.equals(this.validTill, onlineOrchestration.validTill);
  }

  @Override
  public int hashCode() {
    return Objects.hash(typeOfOffer, displayTitle, displayMessage, offerImage, maxWidth, link, oneTimeJWT, connectID, validTill);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OnlineOrchestration {\n");
    
    sb.append("    typeOfOffer: ").append(toIndentedString(typeOfOffer)).append("\n");
    sb.append("    displayTitle: ").append(toIndentedString(displayTitle)).append("\n");
    sb.append("    displayMessage: ").append(toIndentedString(displayMessage)).append("\n");
    sb.append("    offerImage: ").append(toIndentedString(offerImage)).append("\n");
    sb.append("    maxWidth: ").append(toIndentedString(maxWidth)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    oneTimeJWT: ").append(toIndentedString(oneTimeJWT)).append("\n");
    sb.append("    connectID: ").append(toIndentedString(connectID)).append("\n");
    sb.append("    validTill: ").append(toIndentedString(validTill)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
