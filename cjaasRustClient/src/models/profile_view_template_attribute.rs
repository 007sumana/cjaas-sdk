/*
 * Azure Functions OpenAPI Extension
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProfileViewTemplateAttribute {
    /// Attribute version. Depending on version the evaluation procedure might change.
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    /// The Tape Event to search for.
    #[serde(rename = "event", skip_serializing_if = "Option::is_none")]
    pub event: Option<String>,
    /// The specific metadata of the Tape Event, that needs to be evaluated.
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<String>,
    /// This will limit the number of matching tape events that are used, for building the view.
    #[serde(rename = "limit", skip_serializing_if = "Option::is_none")]
    pub limit: Option<i32>,
    /// Post evaluation the result to be generated using this display name.
    #[serde(rename = "displayName", skip_serializing_if = "Option::is_none")]
    pub display_name: Option<String>,
    /// One of the following: \"minutes\", \"hours\", \"days\" or \"none\"
    #[serde(rename = "lookbackDurationType", skip_serializing_if = "Option::is_none")]
    pub lookback_duration_type: Option<String>,
    /// Number of minutes, hours or days to look back into the past, to search for the matching events in Tape
    #[serde(rename = "lookbackPeriod", skip_serializing_if = "Option::is_none")]
    pub lookback_period: Option<i32>,
    /// Indicates how the matching events will be aggregated. \"Value\": All the metadata will be concatenated in a comma-separated string.\"Count\": We will evaluate the count of occurrences of the event metadata in the specified time period.\"Sum\": We will attempt to parse the metadata as integer and add the values.\"Max\", \"Average\", \"Min\": The metadata will be parsed as integer and then Max/Avg/Min of the values will be calculated respectively.\"Distinct\": We will select only the unique items from the metadata. 
    #[serde(rename = "aggregationMode", skip_serializing_if = "Option::is_none")]
    pub aggregation_mode: Option<String>,
    /// If set to true, indicates that the matching Journey Events to be included in the response as well.
    #[serde(rename = "verbose", skip_serializing_if = "Option::is_none")]
    pub verbose: Option<bool>,
}

impl ProfileViewTemplateAttribute {
    pub fn new() -> ProfileViewTemplateAttribute {
        ProfileViewTemplateAttribute {
            version: None,
            event: None,
            metadata: None,
            limit: None,
            display_name: None,
            lookback_duration_type: None,
            lookback_period: None,
            aggregation_mode: None,
            verbose: None,
        }
    }
}


